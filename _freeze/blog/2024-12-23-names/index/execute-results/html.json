{
  "hash": "5758bc12740dd5434c8af6edb4e28668",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Which names that are also names of countries are most common?\"\ndate: '2024-12-23'\ntags:\n  - rstats\n  - tidyverse\nsubtitle: \"Sitting around the living room over the weekend, someone asked this question. Let's poke at an answer.\"\nimage: featured.png\nsummary: ''\n---\n\n\n\n\n\nSitting around the living room over the weekend, someone asked \"Which names that are also names of countries are most common?\" We all gave guesses, and then I gave in to the urge to reach for my laptop and generate an answer that was authoritative enough for our purposes.\n\nThe data I can easily access answers a question more like: which names that are also English names of countries were most common in the USA from 1880 to 2017? Before you read further, **try to guess**!\n\n## Setup\n\nWe'll use two CRAN packages to help answer this question:\n\n* [babynames](https://hadley.github.io/babynames/), which contains a data frame by the same name containing counts of babies by name by year in the US.\n* [countrycode](https://vincentarelbundock.github.io/countrycode/#/), which contains a data frame that includes, among other things, (English) names of countries.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(c(\"countrycode\", \"babynames\"))\n```\n:::\n\n\n\nAlso, of course:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(c(\"tidyverse\"))\n```\n:::\n\n\n\nLoading those up:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(countrycode)\nlibrary(babynames)\nlibrary(tidyverse)\n```\n:::\n\n\n\nHere's what the data on baby names looks like:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,924,665 Ã— 5\n    year sex   name          n   prop\n   <dbl> <chr> <chr>     <int>  <dbl>\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# â„¹ 1,924,655 more rows\n```\n\n\n:::\n:::\n\n\n\nAnd the country data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncodelist\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 291 Ã— 624\n   ar5      cctld continent  country.name.de     country.name.de.regex\n   <chr>    <chr> <chr>      <chr>               <chr>                \n 1 ASIA     .af   Asia       Afghanistan         afghan               \n 2 EIT      .al   Europe     Albanien            albanien             \n 3 MAF      .dz   Africa     Algerien            algerien             \n 4 ASIA     .as   Oceania    Amerikanisch-Samoa  ^(?=.*amerik).*samoa \n 5 OECD1990 .ad   Europe     Andorra             andorra              \n 6 MAF      .ao   Africa     Angola              angola               \n 7 LAM      .ai   Americas   Anguilla            anguill?a            \n 8 LAM      .aq   Antarctica Antarktis           ^(?!.*franz).*antarkâ€¦\n 9 LAM      .ag   Americas   Antigua und Barbuda antigua              \n10 LAM      .ar   Americas   Argentinien         argentin             \n# â„¹ 281 more rows\n# â„¹ 619 more variables: country.name.en <chr>,\n#   country.name.en.regex <chr>, country.name.fr <chr>,\n#   country.name.fr.regex <chr>, country.name.it <chr>,\n#   country.name.it.regex <chr>, cow.name <chr>, cowc <chr>,\n#   cown <dbl>, currency <chr>, dhs <chr>, ecb <chr>, eu28 <chr>,\n#   eurocontrol_pru <chr>, eurocontrol_statfor <chr>, â€¦\n```\n\n\n:::\n:::\n\n\n\n`country.name.en` is our ticket.\n\n## The reveal\n\nWe can use some of the core verbs from dplyr to answer our question:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_names <-\n  babynames %>%\n  # only keep names that are also English country names.\n  filter(name %in% codelist$country.name.en) %>%\n  # then, for each name...\n  group_by(name) %>%\n  # take the sum of the counts across years, and...\n  summarize(n = sum(n)) %>%\n  # show the highest counts at the top.\n  arrange(desc(n))\n\ntop_names\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 64 Ã— 2\n   name          n\n   <chr>     <int>\n 1 Jordan   499903\n 2 Chad     240662\n 3 Georgia  151662\n 4 Israel    60698\n 5 Kenya     26199\n 6 India     22154\n 7 Unknown   18723\n 8 Malaysia   7444\n 9 Ireland    5350\n10 China      4523\n# â„¹ 54 more rows\n```\n\n\n:::\n:::\n\n\n\nWas your guess in the top three?^[I added this footnote so that you'd end up near the comments section. Let me know.]\n\n## Bonus points\n\nNow that we're here, of course, we have to get up to a little tomfoolery. How are those top names trending?\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbabynames %>%\n  # only keep names that are in the top 5 from the previous result\n  filter(name %in% top_names$name[1:5]) %>%\n  # take a weighted average of the proportions across sex\n  group_by(year, name) %>%\n  summarize(prop = (sum(n) / sum(n/prop))) %>%\n  mutate(pct = prop * 100) %>%\n  # plot that feller\n  ggplot() +\n  aes(x = year, y = pct, color = name) +\n  geom_line() +\n  labs(x = \"Year\", y = \"Percent\", color = \"Name\") +\n  scale_y_continuous(labels = scales::percent_format(scale = 1)) +\n  theme(legend.position = c(0.15, 0.75))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot names-by-year-1.png){fig-align='center' fig-alt='Percentage of babies named with the top five US names that are also English names of countries. Georgia used to be the most popular by far (around .2%) until the 1910s or so. Chad had a big push around 1975, peaking at .4% of babies, and Jordan its own around 1990, peaking around .5%, but both were short-lived.' width=672}\n:::\n:::\n\n\n\nI initially found it somewhat surprising that there was so much variation in the proportion of Georgia's up until 1920, and then suddenly not. The only way I could explain that sudden shift would be a huge increase in the number of people generally right around 1920â€”more people, less noisy proportionâ€”but that didn't seem reasonable to me.\n\nTurns out, that definitely happened:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbabynames %>% \n  group_by(year) %>% \n  summarize(n = sum(n)) %>% \n  ggplot() + \n  aes(x = year, y = n) + \n  geom_line() +\n  labs(x = \"Year\", y = \"Number of Babies\") +\n  scale_y_continuous(labels = scales::comma)\n```\n\n::: {.cell-output-display}\n![Note this isn't necessarily the number of babies born per year in the U.S. as the data includes only those names/sexes/years corresponding to at least 5 babies.](index_files/figure-html/plot-pop-1.png){fig-align='center' fig-alt='A line plot showing the number of babies per year in the US from 1880 to now. The important part for this part is that the number of babies per year skyrocketed from 500,000 to 2,500,000 between 1910 and 1920.' width=672}\n:::\n:::\n\n\n\nI know very little about the history of the country that I live in. Alas, happy holidays, yall.ðŸŽ„\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}